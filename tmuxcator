#!/bin/bash
create-config()
{
	# create config directory if not exist
	if [ ! -d $cfdir ]; then
		mkdir $cfdir
	fi
# standard template layout 
template="
#!/bin/bash  \n
 #project name and direcotry\n
 name=projname \n
 root=~/Documents/prog/ \n
 \n
 #panes with 'pane1_cmd:pane2_cmd,layout'\n
 main_panes='nvim:zsh,main-vertical'\n
 \n
 \n
 \n
 \n
 # additional windows \n
 #Always put the window definition inside '' like the example below. \n
 \n
 #windows=('window_cmd:pane1_cmd'.'window2_cmd:pane2_cmd') \n
 #each window definition is seperated by . \n
 windows=('python:gdb,main-vertical'.'zsh,main-vertical') \n
"
# create config file if non existant
	if [ ! -f $cfile ]; then
		touch $cfile
		echo -e $template > $cfile
	fi
	$EDITOR $cfile
}

tmuxination()
{

	#source the config file
	source $cfile

	#create project root if non existant
	if [ -f $root ]; then
		mkdir -pv $root
		cd $root
	else
		cd $root
	fi

	#use . as seperator in bash arrays
	local IFS="."

	#assign main layout and commands
	main_layout="$(echo $main_panes | cut -d',' -f 2)"
	main_layout="$(echo $main_layout | cut -d' ' -f 1)"
	main_panes="$(echo $main_panes | cut -d',' -f 1)"
	cmd="$(echo $main_panes | cut -d':' -f 1)"

	#launch the tmux session
	tmux new-session -d -s $name $cmd
	
	#assign main panes
	panes=($(echo $main_panes | tr ":" "."))
	for pane in ${panes[*]:1}; do
		tmux split-window -t $name:0 $pane;
	done
	# set the layout
	tmux select-layout -t $name:0 $main_layout

  ((i=1))
  	# for each window in config 
	for window in ${windows[*]};
	do
		winlayout="$(echo $window | cut -d',' -f 2)";
		winlayout="$(echo $winlayout | cut -d' ' -f 1)";
		window="$(echo $window | cut -d',' -f 1)";
		cmdw="$(echo $window | cut -d':' -f 1)";
		#echo 'making window '$i
		tmux new-window -t $name:$i $cmdw;
		#sleep 1

		wpanes=($(echo $window | tr ":" "."))
		for wpane in "${wpanes[@]:1}"; do
			#echo 'making pane '$wpane' in window '$i
			#split panes according to config
			tmux split-window -t $name:$i $wpane
		done
		#set the layout for each window
		tmux select-layout -t $name:$i $winlayout
		((i+=1));
	done

	# select the main window and join the tmux session
	tmux select-window -t $cmd
	tmux attach-session -E -t $name
}


cfdir="$XDG_CONFIG_HOME/tmuxcator"

case $1 in
	new)
		if [ ! -z "$2" -a "$2" != " " ]; then 
		cfile=$cfdir/$2
		create-config
		else 
			echo "check the <name> of the project"
		fi
		;;
	list)
		ls $cfdir
		;;
	edit)
	if [ ! -z "$2" -a "$2" != " " ]; then 
		cfile=$cfdir/$2
		$EDITOR $cfile
		else 
			echo "check the <name> of the project"
	fi
		;;
	o)
		if [ ! -z "$2" -a "$2" != " " ]; then 
		cfile=$cfdir/$2
		tmuxination
		else 
			echo "check the <name> of the project"
		fi
		;;
	rm)
		if [ ! -z "$2" -a "$2" != " " ]; then 
		cfile=$cfdir/$2
		rm $cfile
		echo "Deleted: " $cfile
		else 
			echo "check the <name> of the project"
		fi
		;;
	help)
	echo "TmuxinatorCommands:
	new  <name>: new config with name of <name>.
	o <name>: open tmux <name> session.
	edit <name>: edit <name> config.
	list : list configs.
	rm <name>: delete <name> config.
	help : show this."
		;;
	*)
	echo "Tmuxinator Commands:
	new  <name>: new config with name of <name>.
	o <name>: open tmux <name> session.
	edit <name>: edit <name> config.
	list : list configs.
	rm <name>: delete <name> config.
	help : show this."
		;;
esac
